import java.util.*;
import java.util.stream.*;

import entidad.Alumno;

public class Principal {
    public static void main(String[] args) {
        Alumno al1 = new Alumno(202578, "Hilario", "Flores", "Rojas", 20, "Ing. Sistemas Computacionales", "BUAP");
        Alumno al2 = new Alumno(202576, "Luis", "Osorio", "Jimenez", 23, "Lic. Psicologia", "BUAP");
        Alumno al3 = new Alumno(265686, "Ximena", "Huesca", "Alarcon", 21, "Arquitectura", "Anahuac");
        Alumno al4 = new Alumno(297757, "Camila", "Ortiz", "Gomez", 24, "Medicina", "UASLP");
        Alumno al5 = new Alumno(1001, "Ana", "Pérez", "López", 21, "Ingeniería Civil", "BUAP");

        List<Alumno> alumnos = new ArrayList<Alumno>();
        Collections.addAll(alumnos, al1, al2, al3, al4, al5);

        System.out.println("=== Nombres de todos los alumnos ===");
        alumnos.forEach(a -> System.out.println("Nombre: " + a.getNombre()));

        System.out.println("\n=== Detalle de alumnos de BUAP ===");
        alumnos.stream()
            .filter(a -> a.getUniversidad().equalsIgnoreCase("BUAP"))
            .forEach(a -> System.out.println("Nombre: " + a.getNombre() + " " + a.getaPaterno()
                + " estudia " + a.getCarrera() + " en la universidad " + a.getUniversidad()));

        System.out.println("\n=== Alumnos mayores de 27 años ===");
        alumnos.stream()
            .filter(a -> a.getEdad() > 27)
            .forEach(a -> System.out.println(a.getNombre()));

        System.out.println("\n=== Alumnos cuyo nombre empieza con 'A' ===");
        alumnos.stream()
            .filter(a -> a.getNombre().toLowerCase().startsWith("a"))
            .forEach(a -> System.out.println(a.getNombre()));

        System.out.println("\n=== Alumnos ordenados por nombre ===");
        alumnos.stream()
            .sorted(Comparator.comparing(Alumno::getNombre))
            .forEach(a -> System.out.println(a.getNombre()));

        System.out.println("\n=== Total alumnos de Medicina ===");
        long totalMedicina = alumnos.stream()
            .filter(a -> a.getCarrera().equalsIgnoreCase("Medicina"))
            .count();
        System.out.println("Cantidad: " + totalMedicina);

        System.out.println("\n=== Nombres en mayúsculas ===");
        alumnos.stream()
            .map(a -> a.getNombre().toUpperCase())
            .forEach(System.out::println);

        System.out.println("\n=== Promedio de edad ===");
        OptionalDouble promedioEdad = alumnos.stream()
            .mapToInt(Alumno::getEdad)
            .average();
        System.out.println("Promedio: " + (promedioEdad.isPresent() ? promedioEdad.getAsDouble() : "N/A"));

        System.out.println("\n=== ¿Existe alumno de Arquitectura? ===");
        boolean existeArq = alumnos.stream()
            .anyMatch(a -> a.getCarrera().equalsIgnoreCase("Arquitectura"));
        System.out.println(existeArq ? "Sí" : "No");

        System.out.println("\n=== Alumnos de BUAP en Lic. Psicologia ===");
        alumnos.stream()
            .filter(a -> a.getUniversidad().equalsIgnoreCase("BUAP") &&
                         a.getCarrera().equalsIgnoreCase("Lic. Psicologia"))
            .forEach(a -> System.out.println(a.getNombre()));
    }
}
